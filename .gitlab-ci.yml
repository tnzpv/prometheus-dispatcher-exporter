stages:
  - build-go
  - build-docker
  - deploy

go:
  stage: build-go
  image: golang:1.23.3-alpine
  tags:
    - build
  before_script:
    - go mod tidy
  script:
    - go build -ldflags="-X 'main.Version=${CI_COMMIT_TAG}'" -o prometheus-dispatcher-exporter_${CI_COMMIT_TAG}
  artifacts:
    paths:
      - prometheus-dispatcher-exporter_${CI_COMMIT_TAG}
    expire_in: 1 day
  only:
    - /^v([0-9]*\.){2}[0-9]*$/

docker:
  stage: build-docker
  image: docker
  tags:
    - build
  before_script:
    - echo -n ${ACCESS_TOKEN} | docker login -u ${LOGIN} --password-stdin ${CI_REGISTRY}
  script:
    - docker build --build-arg CI_COMMIT_TAG=${CI_COMMIT_TAG} -t ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG} .
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}
  only:
    - /^v([0-9]*\.){2}[0-9]*$/
  when: on_success

deploy:
  stage: deploy
  image: alpine
  tags:
    - deploy
  before_script:
    - apk add rsync openssh-client
    - mkdir -p ~/.ssh
    - ssh-keyscan ${HOST} > ~/.ssh/known_hosts
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/gitlab-ci
    - chmod 600 ~/.ssh/gitlab-ci
    - eval `ssh-agent -s`
    - ssh-add ~/.ssh/gitlab-ci
  script:
    - ssh ${USER}@${HOST} "sed -i '/^VERSION=/c\VERSION=${CI_COMMIT_TAG}' ${DIRECTORY}/env"
    - scp docker-compose.yml ${USER}@${HOST}:${DIRECTORY}/
    - ssh ${USER}@${HOST} "cd ${DIRECTORY}; docker compose --env-file env pull; docker compose --env-file env down; docker compose --env-file env up -d"
  only:
    - /^v([0-9]*\.){2}[0-9]*$/
  when: on_success
  